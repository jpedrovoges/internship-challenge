{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpedr\\\\Documents\\\\Salutho\\\\internship-challenge\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport './App.css'; // Usaremos para a estilização\n\n// URL base da API Django (onde o backend está rodando)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000/api/calculate-lcm/';\nfunction App() {\n  _s();\n  const [x, setX] = useState('');\n  const [y, setY] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // -------------------------------------------------------------------\n  // A. Lógica de Validação no Frontend\n  // -------------------------------------------------------------------\n  const validateInputs = () => {\n    // 1. Converter para número e checar se são válidos\n    const numX = parseInt(x);\n    const numY = parseInt(y);\n    if (isNaN(numX) || isNaN(numY)) {\n      return 'Por favor, insira valores válidos para X e Y.';\n    }\n\n    // 2. Ambos os números são inteiros positivos.\n    if (numX <= 0 || numY <= 0) {\n      return 'Os números X e Y devem ser inteiros e positivos (> 0).';\n    }\n\n    // 3. O valor de x deve ser menor que y.\n    if (numX >= numY) {\n      return 'O valor de X deve ser estritamente menor que Y.';\n    }\n\n    // O intervalo não deve ser menor ou igual a zero (já coberto por numX > 0)\n    // Se X e Y são positivos e X < Y, o intervalo é válido.\n\n    return null; // Nenhuma mensagem de erro\n  };\n\n  // -------------------------------------------------------------------\n  // B. Submissão do Formulário e Comunicação com a API\n  // -------------------------------------------------------------------\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResult(null);\n    setError(null);\n    const validationError = validateInputs();\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n    setLoading(true);\n    try {\n      // Fazendo a requisição GET para a API Django\n      const response = await fetch(`${API_BASE_URL}?x=${x}&y=${y}`);\n      const data = await response.json();\n      if (!response.ok) {\n        // Trata erros de validação retornados pelo Backend (ex: 400 Bad Request)\n        const backendError = data.error || 'Erro desconhecido do servidor.';\n        throw new Error(backendError);\n      }\n\n      // Exibe o resultado\n      setResult(data.result);\n    } catch (err) {\n      console.error(\"Erro na requisição:\", err);\n      setError(`Erro: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -------------------------------------------------------------------\n  // C. Renderização\n  // -------------------------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculadora de MMC de Intervalo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"lcm-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"x-input\",\n          children: \"In\\xEDcio do Intervalo (X):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"x-input\",\n          type: \"number\",\n          value: x,\n          onChange: e => setX(e.target.value),\n          placeholder: \"Ex: 1\",\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"y-input\",\n          children: \"Fim do Intervalo (Y):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"y-input\",\n          type: \"number\",\n          value: y,\n          onChange: e => setY(e.target.value),\n          placeholder: \"Ex: 10\",\n          min: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Calculando...' : 'Calcular MMC'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message success\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"O Menor M\\xFAltiplo Comum (MMC) para o intervalo de **\", x, \" a \", y, \"** \\xE9:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-value\",\n        children: [\"**\", result, \"**\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"omR1+B1eav6JOT2lI3IWZnzAj2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","x","setX","y","setY","result","setResult","error","setError","loading","setLoading","validateInputs","numX","parseInt","numY","isNaN","handleSubmit","e","preventDefault","validationError","response","fetch","data","json","ok","backendError","Error","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","min","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jpedr/Documents/Salutho/internship-challenge/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport './App.css'; // Usaremos para a estilização\n\n// URL base da API Django (onde o backend está rodando)\nconst API_BASE_URL = 'http://localhost:8000/api/calculate-lcm/';\n\nfunction App() {\n  const [x, setX] = useState('');\n  const [y, setY] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // -------------------------------------------------------------------\n  // A. Lógica de Validação no Frontend\n  // -------------------------------------------------------------------\n  const validateInputs = () => {\n    // 1. Converter para número e checar se são válidos\n    const numX = parseInt(x);\n    const numY = parseInt(y);\n\n    if (isNaN(numX) || isNaN(numY)) {\n      return 'Por favor, insira valores válidos para X e Y.';\n    }\n\n    // 2. Ambos os números são inteiros positivos.\n    if (numX <= 0 || numY <= 0) {\n      return 'Os números X e Y devem ser inteiros e positivos (> 0).';\n    }\n\n    // 3. O valor de x deve ser menor que y.\n    if (numX >= numY) {\n      return 'O valor de X deve ser estritamente menor que Y.';\n    }\n    \n    // O intervalo não deve ser menor ou igual a zero (já coberto por numX > 0)\n    // Se X e Y são positivos e X < Y, o intervalo é válido.\n\n    return null; // Nenhuma mensagem de erro\n  };\n\n  // -------------------------------------------------------------------\n  // B. Submissão do Formulário e Comunicação com a API\n  // -------------------------------------------------------------------\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setResult(null);\n    setError(null);\n\n    const validationError = validateInputs();\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n    \n    setLoading(true);\n\n    try {\n      // Fazendo a requisição GET para a API Django\n      const response = await fetch(`${API_BASE_URL}?x=${x}&y=${y}`);\n      \n      const data = await response.json();\n\n      if (!response.ok) {\n        // Trata erros de validação retornados pelo Backend (ex: 400 Bad Request)\n        const backendError = data.error || 'Erro desconhecido do servidor.';\n        throw new Error(backendError);\n      }\n\n      // Exibe o resultado\n      setResult(data.result);\n\n    } catch (err) {\n      console.error(\"Erro na requisição:\", err);\n      setError(`Erro: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -------------------------------------------------------------------\n  // C. Renderização\n  // -------------------------------------------------------------------\n  return (\n    <div className=\"app-container\">\n      <h1>Calculadora de MMC de Intervalo</h1>\n      \n      <form onSubmit={handleSubmit} className=\"lcm-form\">\n        <div className=\"input-group\">\n          <label htmlFor=\"x-input\">Início do Intervalo (X):</label>\n          <input\n            id=\"x-input\"\n            type=\"number\"\n            value={x}\n            onChange={(e) => setX(e.target.value)}\n            placeholder=\"Ex: 1\"\n            min=\"1\"\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"y-input\">Fim do Intervalo (Y):</label>\n          <input\n            id=\"y-input\"\n            type=\"number\"\n            value={y}\n            onChange={(e) => setY(e.target.value)}\n            placeholder=\"Ex: 10\"\n            min=\"2\"\n          />\n        </div>\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Calculando...' : 'Calcular MMC'}\n        </button>\n      </form>\n      \n      {/* Área de Mensagens (Erro ou Resultado) */}\n      {error && <p className=\"message error\">{error}</p>}\n\n      {result !== null && (\n        <div className=\"message success\">\n          <p>O Menor Múltiplo Comum (MMC) para o intervalo de **{x} a {y}** é:</p>\n          <p className=\"result-value\">**{result}**</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}